#!/usr/bin/env bash

##
#  This file is part of prose-pod-system
#
#  Copyright 2025, Prose Foundation
##

set -eu -o pipefail

TEST_NAME="run-$(date +%s)"
TEST_DIR="./test/${TEST_NAME}"

export PROSE_POD_API_DATA_DIR="${TEST_DIR}"/var/lib/prose-pod-api
export PROSODY_DATA_DIR="${TEST_DIR}"/var/lib/prosody
export PROSODY_CONFIG_DIR="${TEST_DIR}"/etc/prosody
export PROSE_CONFIG_DIR="${TEST_DIR}"/etc/prose
export PROSE_ENV_FILE="${PROSE_CONFIG_DIR}"/prose.env

export PROSE_UID=''
export PROSE_GID=''

umask 027
mkdir -p "${TEST_DIR}"/var/lib/{prosody,prose-pod-api}
mkdir -p "${TEST_DIR}"/etc/{prosody,prose}
mkdir -p "${TEST_DIR}"/etc/prosody/certs

touch "${PROSE_POD_API_DATA_DIR}/database.sqlite"

umask 077
touch "${PROSE_ENV_FILE}"

cat <<EOF >> "${PROSE_CONFIG_DIR}/prose.toml"
[server]
domain = "localhost"

EOF

try-run() {
	docker compose up -d
	sleep 1
	docker compose stop

	# echo "All logs:"
	# docker compose logs

	echo -e "\nWarnings:"
	docker compose logs | grep -i 'warn' || :

	echo -e "\nErrors:"
	! docker compose logs | grep -i 'error' || exit 1
}

try-run

# Test a bit of configuration.
export PROSE_POD_IS_TTY=true
umask 077
cat <<EOF >> "${PROSE_CONFIG_DIR}/prose.env"
PROSE_LOG__FORMAT=full
PROSE_LOG__WITH_ANSI=true
EOF

try-run

rm -rf "${TEST_DIR}/"
