#!/bin/bash

##
#  This file is part of prose-pod-system
#
#  Copyright 2025, Prose Foundation
##

set -e

: ${SELF:="$(basename $0)"}
: ${REPOSITORY_ROOT:="$(dirname "$0")"/..};

source "${REPOSITORY_ROOT:?}"/scripts/tools/colors.sh
source "${REPOSITORY_ROOT:?}"/scripts/tools/log.sh
source "${REPOSITORY_ROOT:?}"/scripts/tools/find-replace-versions.sh

usage() {
	echo "Usage: ${SELF:?} [dashboard=X.Y.Z] [api=X.Y.Z] [server=X.Y.Z]"
}
help() {
	usage
	exit 0
}

for arg in "$@"; do
	case $arg in
		dashboard=*) NEW_DASHBOARD_TAG="${arg#'dashboard='}" ;;
		api=*) NEW_API_TAG="${arg#'api='}" ;;
		server=*) NEW_SERVER_TAG="${arg#'server='}" ;;
		--help) help ;;
		*) error 'Unknown argument: `'"$arg"'`.'; echo "$(usage)"; die ;;
	esac
done

if [[ $# == 0 ]]; then
	echo 'Since you didn’t pass any version to update, you might be wondering'
	echo -e 'what the current versions are. Here it is:\n'
fi

OLD_DASHBOARD_TAG="$(find_version_dashboard)"
if [[ -n "${NEW_DASHBOARD_TAG}" ]]; then
	echo -e "Dashboard: ${Yellow:?}${OLD_DASHBOARD_TAG:?}${Color_Off:?} -> ${Green:?}${NEW_DASHBOARD_TAG:?}${Color_Off:?}"
else
	echo -e "Dashboard: ${Cyan:?}${OLD_DASHBOARD_TAG:?}${Color_Off:?}"
fi

OLD_API_TAG="$(find_version_api)"
if [[ -n "${NEW_API_TAG}" ]]; then
	echo -e "API: ${Yellow:?}${OLD_API_TAG:?}${Color_Off:?} -> ${Green:?}${NEW_API_TAG:?}${Color_Off:?}"
else
	echo -e "API: ${Cyan:?}${OLD_API_TAG:?}${Color_Off:?}"
fi

OLD_SERVER_TAG="$(find_version_server)"
if [[ -n "${NEW_SERVER_TAG}" ]]; then
	echo -e "Server: ${Yellow:?}${OLD_SERVER_TAG:?}${Color_Off:?} -> ${Green:?}${NEW_SERVER_TAG:?}${Color_Off:?}"
else
	echo -e "Server: ${Cyan:?}${OLD_SERVER_TAG:?}${Color_Off:?}"
fi

if [[ $# == 0 ]]; then
	echo -e '\nIf you didn’t know how to use the command, here’s how:'
	help
fi

read -p "Proceed? [y/N]: " ok
[[ "$ok" =~ ^[Yy]$ ]] || exit 1

if [[ -n "${NEW_DASHBOARD_TAG}" ]]; then
	replace_version_dashboard "${NEW_DASHBOARD_TAG:?}"
fi
if [[ -n "${NEW_API_TAG}" ]]; then
	replace_version_api "${NEW_API_TAG:?}"
fi
if [[ -n "${NEW_SERVER_TAG}" ]]; then
	replace_version_server "${NEW_SERVER_TAG:?}"
fi
